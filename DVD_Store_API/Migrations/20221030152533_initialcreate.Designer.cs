// <auto-generated />
using System;
using DVD_Store_API.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DVDStoreAPI.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20221030152533_initialcreate")]
    partial class initialcreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.0-rc.2.22472.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("DVD_Store_API.Models.ActorActress", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ActorsActresses");
                });

            modelBuilder.Entity("DVD_Store_API.Models.Customer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("JoinedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("DVD_Store_API.Models.Movie", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Movies");
                });

            modelBuilder.Entity("DVD_Store_API.Models.MovieActorActress", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ActorActressId")
                        .HasColumnType("int");

                    b.Property<int>("MovidId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ActorActressId");

                    b.HasIndex("MovidId");

                    b.ToTable("MoviesActorsActresses");
                });

            modelBuilder.Entity("DVD_Store_API.Models.Rent", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<int>("MovidId")
                        .HasColumnType("int");

                    b.Property<DateTime>("RentDateTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ReturnDateTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.HasIndex("MovidId");

                    b.ToTable("Rents");
                });

            modelBuilder.Entity("DVD_Store_API.Models.MovieActorActress", b =>
                {
                    b.HasOne("DVD_Store_API.Models.ActorActress", "ActorActress")
                        .WithMany("MoviesActorsActresses")
                        .HasForeignKey("ActorActressId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DVD_Store_API.Models.Movie", "Movie")
                        .WithMany("MoviesActorsActresses")
                        .HasForeignKey("MovidId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ActorActress");

                    b.Navigation("Movie");
                });

            modelBuilder.Entity("DVD_Store_API.Models.Rent", b =>
                {
                    b.HasOne("DVD_Store_API.Models.Customer", "Customer")
                        .WithMany("Rents")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DVD_Store_API.Models.Movie", "Movie")
                        .WithMany("Rents")
                        .HasForeignKey("MovidId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");

                    b.Navigation("Movie");
                });

            modelBuilder.Entity("DVD_Store_API.Models.ActorActress", b =>
                {
                    b.Navigation("MoviesActorsActresses");
                });

            modelBuilder.Entity("DVD_Store_API.Models.Customer", b =>
                {
                    b.Navigation("Rents");
                });

            modelBuilder.Entity("DVD_Store_API.Models.Movie", b =>
                {
                    b.Navigation("MoviesActorsActresses");

                    b.Navigation("Rents");
                });
#pragma warning restore 612, 618
        }
    }
}
